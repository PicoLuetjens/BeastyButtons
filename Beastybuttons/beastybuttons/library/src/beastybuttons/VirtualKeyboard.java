package beastybuttons;

import processing.core.*;

//package private class for the virtual keyboard
class VirtualKeyboard
{
    //lower case letters
    private char[]chars_lc = {'q', 'w', 'e', 'r', 't', 'z', 'u', 'i', 'o', 'p', 'ü', 'a', 's', 'd', 'f', 'g', 'h',
            'j', 'k', 'l', 'ö', 'ä', 'y', 'x', 'c', 'v', 'b', 'n', 'm'};

    //upper case letters
    private char[]chars_uc = {'Q', 'W', 'E', 'R', 'T', 'Z', 'U', 'I', 'O', 'P', 'Ü', 'A', 'S', 'D', 'F', 'G', 'H',
            'J', 'K', 'L', 'Ö', 'Ä', 'Y', 'X', 'C', 'V', 'B', 'N', 'M'};

    //numbers
    private char[]numbers = {'1', '2', '3', '4', '5', '6', '7', '8', '9',};

    //special symbols
    private char[]symbols = {'!', '%', '&', '/', '(', ')', '.', ',', ':', 'ß', '?'};

    //special keys
    private String[]s_keys = {"Space", "Enter"};

    //the position of the top edge of the keyboard
    private int topEdgePos;

    //this holds the output string generated by keyboard
    private String output;

    //papplet ref
    private PApplet ref;

    //list of all keys to loop over
    private SingleKey[]keys = new SingleKey[this.s_keys.length+this.symbols.length+this.numbers.length+this.chars_uc.length];

    VirtualKeyboard(PApplet p)
    {
        this.ref = p;
        this.setupkeys();
    }

    //declares all the keys
    private void setupkeys()
    {

    }

    //returns the top edge position to make the shift of the wholem frame possible according to the keyboard position
    protected int getTopEdgePosition()
    {
        return this.topEdgePos;
    }

    //draws the keyboard
    protected void render()
    {

    }

    //inner class defining a single key
    private class SingleKey
    {
        //lower case version
        private char lc;

        //upper case version
        private char uc;

        //width and height of the key
        private int key_w, key_h;

        SingleKey(char lc, char uc)
        {
            this.lc = lc;
            this.uc = uc;
        }

        SingleKey(char c)
        {

        }
    }
}
